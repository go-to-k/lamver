// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/client/aws_config_factory.go

// Package client is a generated GoMock package.
package client

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAWSConfigCreator is a mock of AWSConfigCreator interface.
type MockAWSConfigCreator struct {
	ctrl     *gomock.Controller
	recorder *MockAWSConfigCreatorMockRecorder
}

// MockAWSConfigCreatorMockRecorder is the mock recorder for MockAWSConfigCreator.
type MockAWSConfigCreatorMockRecorder struct {
	mock *MockAWSConfigCreator
}

// NewMockAWSConfigCreator creates a new mock instance.
func NewMockAWSConfigCreator(ctrl *gomock.Controller) *MockAWSConfigCreator {
	mock := &MockAWSConfigCreator{ctrl: ctrl}
	mock.recorder = &MockAWSConfigCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAWSConfigCreator) EXPECT() *MockAWSConfigCreatorMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockAWSConfigCreator) Create(ctx context.Context, region string) (*AWSConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, region)
	ret0, _ := ret[0].(*AWSConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockAWSConfigCreatorMockRecorder) Create(ctx, region interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAWSConfigCreator)(nil).Create), ctx, region)
}
